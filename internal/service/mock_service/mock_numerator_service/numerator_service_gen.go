// Code generated by MockGen. DO NOT EDIT.
// Source: numerator_service.go
//
// Generated by this command:
//
//	mockgen -source numerator_service.go -destination ./mock_service/mock_numerator_service/numerator_service_gen.go
//

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	request "github.com/numerator-io/sdk-go/pkg/api/request"
	response "github.com/numerator-io/sdk-go/pkg/api/response"
	gomock "go.uber.org/mock/gomock"
)

// MockNumeratorService is a mock of NumeratorService interface.
type MockNumeratorService struct {
	ctrl     *gomock.Controller
	recorder *MockNumeratorServiceMockRecorder
}

// MockNumeratorServiceMockRecorder is the mock recorder for MockNumeratorService.
type MockNumeratorServiceMockRecorder struct {
	mock *MockNumeratorService
}

// NewMockNumeratorService creates a new mock instance.
func NewMockNumeratorService(ctrl *gomock.Controller) *MockNumeratorService {
	mock := &MockNumeratorService{ctrl: ctrl}
	mock.recorder = &MockNumeratorServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNumeratorService) EXPECT() *MockNumeratorServiceMockRecorder {
	return m.recorder
}

// FlagDetailByKey mocks base method.
func (m *MockNumeratorService) FlagDetailByKey(flagKey string) (response.ApiResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FlagDetailByKey", flagKey)
	ret0, _ := ret[0].(response.ApiResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FlagDetailByKey indicates an expected call of FlagDetailByKey.
func (mr *MockNumeratorServiceMockRecorder) FlagDetailByKey(flagKey any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FlagDetailByKey", reflect.TypeOf((*MockNumeratorService)(nil).FlagDetailByKey), flagKey)
}

// FlagList mocks base method.
func (m *MockNumeratorService) FlagList(requestBody request.FlagListRequest) (response.ApiResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FlagList", requestBody)
	ret0, _ := ret[0].(response.ApiResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FlagList indicates an expected call of FlagList.
func (mr *MockNumeratorServiceMockRecorder) FlagList(requestBody any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FlagList", reflect.TypeOf((*MockNumeratorService)(nil).FlagList), requestBody)
}

// FlagValueByKey mocks base method.
func (m *MockNumeratorService) FlagValueByKey(requestBody request.FlagValueByKeyRequest) (response.ApiResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FlagValueByKey", requestBody)
	ret0, _ := ret[0].(response.ApiResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FlagValueByKey indicates an expected call of FlagValueByKey.
func (mr *MockNumeratorServiceMockRecorder) FlagValueByKey(requestBody any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FlagValueByKey", reflect.TypeOf((*MockNumeratorService)(nil).FlagValueByKey), requestBody)
}
