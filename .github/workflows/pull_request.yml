name: Analyze Pull Request

on:
  pull_request:
    branches: [ "master" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}      
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  lint:
    name: Lint files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - run: go test -v ./...

  build:
    name: Build binary
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        goosarch:
          - aix/ppc64
          - android/386
          - android/amd64
          - android/arm
          - android/arm64
          - darwin/amd64
          - darwin/arm64
          - dragonfly/amd64
          - freebsd/386
          - freebsd/amd64
          - freebsd/arm
          - freebsd/arm64
          - freebsd/riscv64
          - illumos/amd64
          - ios/amd64
          - ios/arm64
          - js/wasm
          - linux/386
          - linux/amd64
          - linux/arm
          - linux/arm64
          - linux/loong64
          - linux/mips
          - linux/mips64
          - linux/mips64le
          - linux/mipsle
          - linux/ppc64
          - linux/ppc64le
          - linux/riscv64
          - linux/s390x
          - netbsd/386
          - netbsd/amd64
          - netbsd/arm
          - netbsd/arm64
          - openbsd/386
          - openbsd/amd64
          - openbsd/arm
          - openbsd/arm64
          - openbsd/ppc64
          - plan9/386
          - plan9/amd64
          - plan9/arm
          - solaris/amd64
          - wasip1/wasm
          - windows/386
          - windows/amd64
          - windows/arm
          - windows/arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Get OS and arch info
        run: |
          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          BINARY_NAME=${{github.repository}}-$GOOS-$GOARCH
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
      - name: Build
        run: |
          go build -o "$BINARY_NAME" -v
